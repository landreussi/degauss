name: cicd

on:
  push:
    branches:
      - main
      - master
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - master
  schedule:
    - cron: "0 7 * * *"

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: ${{ matrix.job.os }} (${{ matrix.job.target }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              os: ubuntu-20.04,
              target: arm-unknown-linux-gnueabihf,
              use-cross: true,
            }
          - {
              os: ubuntu-20.04,
              target: arm-unknown-linux-musleabihf,
              use-cross: true,
            }
          - {
              os: ubuntu-20.04,
              target: aarch64-unknown-linux-gnu,
              use-cross: true,
            }
          - {
              os: ubuntu-20.04,
              target: i686-unknown-linux-gnu,
              use-cross: true,
            }
          - {
              os: ubuntu-20.04,
              target: i686-unknown-linux-musl,
              use-cross: true,
            }
          - { os: ubuntu-20.04, target: x86_64-unknown-linux-gnu }
          - {
              os: ubuntu-20.04,
              target: x86_64-unknown-linux-musl,
              use-cross: true,
            }
          - { os: macos-10.15, target: x86_64-apple-darwin }
          - { os: windows-2019, target: i686-pc-windows-msvc }
          - { os: windows-2019, target: x86_64-pc-windows-gnu }
          - { os: windows-2019, target: x86_64-pc-windows-msvc }
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Install prerequisites
        shell: bash
        run: |
          case ${{ matrix.job.target }} in
            arm-unknown-linux-*) sudo apt-get -y update ; sudo apt-get -y install gcc-arm-linux-gnueabihf ;;
            aarch64-unknown-linux-gnu) sudo apt-get -y update ; sudo apt-get -y install gcc-aarch64-linux-gnu ;;
          esac

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env:
          DEGAUSS_SCHEMA_REGISTRY_URL: ${{ secrets.DEGAUSS_SCHEMA_REGISTRY_URL }}
          DEGAUSS_SCHEMA_REGISTRY_USER: ${{ secrets.DEGAUSS_SCHEMA_REGISTRY_USER }}
          DEGAUSS_SCHEMA_REGISTRY_PASS: ${{ secrets.DEGAUSS_SCHEMA_REGISTRY_PASS }}
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true

      # - name: Run clippy
      #   uses: actions-rs/clippy-check@v1
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     args: --message-format human -- -D warnings
      - name: Run clippy
        run: |
          cargo clippy --message-format human -- -D warnings

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install tarpaulin
        if: github.ref == 'refs/heads/master' || github.event_name == 'pull_request'
        continue-on-error: true
        run: |
          cargo install cargo-tarpaulin

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin-${{ hashFiles('**/Cargo.lock') }}

      - name: Generate coverage report
        if: github.ref == 'refs/heads/master' || github.event_name == 'pull_request'
        continue-on-error: true
        run: |
          cargo tarpaulin --out Xml --all --all-features

      - name: Upload to Codecov
        if: github.ref == 'refs/heads/master' || github.event_name == 'pull_request'
        continue-on-error: true
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: cobertura.xml
